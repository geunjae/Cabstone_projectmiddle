using UnityEngine;
using System.Collections;

public class FadeInOut : MonoBehaviour
{

    private Color _fadeColor;
    public SpriteRenderer _fadeImage;

    public Transform ImageTf;
    public Transform overTf;

    public float _fadeTime;
    public float _waitTime;
    bool _isLoadScene;
    bool _isclearScene;
    public string _ClearloadSceneName = null;
    public string _DeadloadSceneName = null;

    public GameObject A;
    Transform AT;
    Vector2 trans;
    void Start()
    {
        _fadeColor = new Color(0f, 0f, 0f, 0f);
        _isclearScene = false;
        _isLoadScene = false;
        AT = A.transform;
    }

    void Update()
    {
        trans.Set(0f, AT.position.y);
        if (A.transform.position.y >= -0.25 && !_isclearScene)
        {
            transform.position = Vector2.Lerp(transform.position, trans, 2f * Time.deltaTime);            
        }

        if (this.transform.position.y >= 39f)       
        {          
            _fadeImage.color = _fadeColor;
            _isclearScene = true;
            transform.position = new Vector3(0,transform.position.y,-20f);          
            overTf.position = new Vector3(0, transform.position.y, -19f);           
            StartCoroutine(FadeOut());
        }

    }

    IEnumerator FadeIn()
    {
        float elapsedTime = 0f;

        while (elapsedTime < _fadeTime)
        {
            yield return new WaitForEndOfFrame();
            elapsedTime += Time.deltaTime;
            _fadeColor.a = 1.0f - Mathf.Clamp01(elapsedTime / _fadeTime);
            _fadeImage.color = _fadeColor;
        }
       // if (_fadeSetting._fadeOut)
       //     StartCoroutine(FadeOut());
    }

    IEnumerator FadeOut()
    {
        float elapsedTime = 0f;

        //yield return new WaitForSeconds(_waitTime);
              
       

        while (elapsedTime < _fadeTime)
        {
            yield return 0;
                //WaitForEndOfFrame();
            elapsedTime += Time.deltaTime;
            _fadeColor.a = Mathf.Clamp01(elapsedTime / _fadeTime);           
            _fadeImage.color = _fadeColor;
        }        

        if (_isclearScene)
        {
            if (_ClearloadSceneName != null)
                UnityEngine.SceneManagement.SceneManager.LoadScene(_ClearloadSceneName);           
        }
    }
}
